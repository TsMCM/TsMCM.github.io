<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文章 | 『数学建模协会』</title>
    <link>https://example.com/post/</link>
      <atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>文章</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language><copyright>© 2010-2022 本站版权所有 [鄂ICP备05113319号](https://beian.miit.gov.cn/)</copyright><lastBuildDate>Thu, 14 Dec 2023 11:02:41 +0800</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>文章</title>
      <link>https://example.com/post/</link>
    </image>
    
    <item>
      <title>绘图工具</title>
      <link>https://example.com/post/%E7%BB%98%E5%9B%BE%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 14 Dec 2023 11:02:41 +0800</pubDate>
      <guid>https://example.com/post/%E7%BB%98%E5%9B%BE%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;h3 id=&#34;常见的绘图工具&#34;&gt;常见的绘图工具&lt;/h3&gt;
&lt;h4 id=&#34;1-processonhttpswwwprocessoncom---在线绘图网站&#34;&gt;1. 
&lt;a href=&#34;https://www.processon.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ProcessOn&lt;/a&gt; - 在线绘图网站&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/ProcessOn%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;ProcessOn&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可用于流程图、思维导图、UML、BPMN、网络拓扑图等多种图形绘制，上手很快，比较方便，不需要下载软件就很舒服。&lt;br&gt;
自前，这个网站提供的免费版本的功能用于建模比赛是足够的，大家可以试试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2-microsoft-visiohttpswwwmicrosoftcomzh-cnmicrosoft-365visioflowchart-software---流程图制作工具和绘图软件&#34;&gt;2. 
&lt;a href=&#34;https://www.microsoft.com/zh-cn/microsoft-365/visio/flowchart-software&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft Visio&lt;/a&gt; - 流程图制作工具和绘图软件&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/Visio%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;Microsoft Visio&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内置很多专业模版，功能强大，更适合专业人士使用。体验上我个人感觉比ProcessOn要难用一点，另外Visio是Office下的一款产品，但安装时确会容易出问题，请注意！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;3-ximindhttpsxmindcn---思维导图制作工具和绘图软件&#34;&gt;3. 
&lt;a href=&#34;https://xmind.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ximind&lt;/a&gt; - 思维导图制作工具和绘图软件&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/Ximind%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;Ximind&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个软件也是付费的，只能绘制思维导图，用起来非常方便,但市面上同类的替代品也很多，大家如果需要绘制思维导图也可以选择其他的软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;4-axglyphhttpswwwamyxuncom---矢量绘图软件&#34;&gt;4. 
&lt;a href=&#34;https://www.amyxun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AxGlyph&lt;/a&gt; - 矢量绘图软件&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/AxGlyph%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;AxGlyph&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以绘制带有数学公式的图形，做物理类型的题目应该能用上，可以用PPT代替它。这个软件学起来还是有一点难度的，需要购买使用，但不是很贵，试用版本有水印。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;5-亿图图示httpswwwedrawsoftcnedrawmax---一站式办公绘图利器&#34;&gt;5. 
&lt;a href=&#34;https://www.edrawsoft.cn/edrawmax/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;亿图图示&lt;/a&gt; - 一站式办公绘图利器&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/%E4%BA%BF%E5%9B%BE%E5%9B%BE%E7%A4%BA%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;亿图图示&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个很强大的画图软件，内置很多精美的画图模版，使用也很方便。&lt;br&gt;
缺点是比较贵，试用版导出图片有水印，如果没有特殊需求建议用其他的软件去代替。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;6-gengebrahttpswwwgeogebraorglangzh-cn&#34;&gt;6. 
&lt;a href=&#34;https://www.geogebra.org/?lang=zh-CN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GenGebra&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/GenGebra%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;GenGebra&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GeoGebra是一款完全免费的类似几何画板的 &lt;font color=red size=5 face=&#34;宋体&#34;&gt;动态&lt;/font&gt; 数学软件，用它来画几何图形非常方便,数学建模上面可能用不到，有需要可以下载。（我们提交的论文不支持动态）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;7-apache-echartshttpsechartsapacheorgzhindexhtml---基于-javascript-的开源可视化图表库&#34;&gt;7. 
&lt;a href=&#34;https://echarts.apache.org/zh/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache ECharts&lt;/a&gt; - 基于 JavaScript 的开源可视化图表库&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/ECharts%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;Apache ECharts&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想做数据可视化这一块的同学可以了解下，直接学习Echarts需要一定的前端编程基础。&lt;br&gt;
对这个感兴趣的同学可以去学习Python中的
&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pyecharts&lt;/a&gt;，比直接使用Echarts要方便&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;8-商业智能businessintelligence简称bl&#34;&gt;8. 商业智能（BusinessIntelligence，简称：Bl）&lt;/h4&gt;
&lt;p&gt;商业智能（BusinessIntelligence，简称：Bl）又称商业智慧或商务智能，指用现代数据仓库技术、线上分析处理技术、数据挖掘和数据展现技术进行数据分析以实现商业价值，例如双十一淘宝可视化大屏展示销售额就是商务智能的应用场景之一。&lt;br&gt;
自前市面上比较有名的两款商业智能分析软件是Tableau和PowerBl。&lt;/p&gt;
&lt;h5 id=&#34;1-tableauhttpswwwtableaucomzh-cn---商业智能和分析软件&#34;&gt;1 
&lt;a href=&#34;https://www.tableau.com/zh-cn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tableau&lt;/a&gt; - 商业智能和分析软件&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/Tableau%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;Tableau&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tableau可以帮助人们快速分析、可视化、分享数据。借助其拖放功能，无需深入了解数据结构也可快速将数据可视化。Tableau是商业软件，下载安装后可免费试用14天&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;2-microsoft-power-bihttpswwwmicrosoftcomzh-cnpower-platformproductspower-bi&#34;&gt;2. 
&lt;a href=&#34;https://www.microsoft.com/zh-cn/power-platform/products/power-bi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft Power BI&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/PowerBI%E6%88%AA%E5%9B%BE.jpg&#34; alt=&#34;Microsoft Power BI&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PowerBI是微软公司出品的一款软件，其的核心理念就是让用户不需要强大的技术背景只需要掌握Excel这样简单的工具就能快速上手商业数据分析及可视化。PowerBI有免费人人桌面版本，也有为企业提供的付费版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于基础的建模绘图而言，免费版本足够大家使用了&lt;/p&gt;
&lt;h4 id=&#34;9-社会网络图&#34;&gt;9. 社会网络图&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/%E7%A4%BE%E4%BC%9A%E7%BD%91%E7%BB%9C%E5%9B%BE.jpg&#34; alt=&#34;社会网络图&#34;&gt;&lt;/p&gt;
&lt;p&gt;(1) 不需要编程，手动创建图形的软件：
&lt;a href=&#34;https://gephi.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gelphi&lt;/a&gt;和
&lt;a href=&#34;https://www.yworks.com/products/yed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yEd-Graph Editor&lt;/a&gt;;&lt;br&gt;
(2) 借助开源软件的第三方包，例如：Python的
&lt;a href=&#34;https://networkx.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkX&lt;/a&gt;和R语言的
&lt;a href=&#34;https://igraph.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;igraph&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;10-地理数据可视化&#34;&gt;10. 地理数据可视化&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/post/%E5%9C%B0%E7%90%86%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.jpg&#34; alt=&#34;地理数据可视化&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;地理信息系统（GeographicInformationSystem，GIS）软件可以用于地理数据的可视化，常见的GIS软件有
&lt;a href=&#34;https://www.esri.com/zh-cn/arcgis/products/arcgis-desktop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ArcGIS&lt;/a&gt;、
&lt;a href=&#34;http://www.mapgis.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MapGIS&lt;/a&gt;、
&lt;a href=&#34;https://www.supermap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SuperMap&lt;/a&gt;。但这些软件过于专业，入手起来比较困难。前面介绍的Tableau和PowerBl也支持简单的地图可视化。&lt;br&gt;
Python的
&lt;a href=&#34;https://pypi.org/project/folium/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;folium&lt;/a&gt;也支持该功能，喜欢用Python的同学可以学习下。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>入门数学问题</title>
      <link>https://example.com/post/%E5%85%A5%E9%97%A8%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 14 Nov 2023 20:57:20 +0800</pubDate>
      <guid>https://example.com/post/%E5%85%A5%E9%97%A8%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h3 id=&#34;鸡兔同笼&#34;&gt;鸡兔同笼&lt;/h3&gt;
&lt;p&gt;鸡兔同笼，共35只头，94只脚，问鸡兔各多少？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;heads = 35  # 头的数量
feet = 94   # 脚的数量

for chickens in range(feet//2 + 1):
   total_feet = chickens * 2 + (heads - chickens) * 4
   if total_feet == feet:
       print(f&amp;quot;鸡的数量：{chickens}&amp;quot;)
       print(f&amp;quot;兔子的数量：{(heads - chickens)}&amp;quot;)
       break
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这段代码首先定义了头的数量（heads）和脚的数量（feet）。然后，我们使用一个for循环来枚举鸡的数量，其中鸡的数量不能超过头的数量。在循环内部，我们计算鸡和兔子的总脚数（total_feet），如果总脚数等于脚的数量，就输出鸡和兔子的数量，并跳出循环。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MATLAB 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-matlab&#34;&gt;heads = 35; % 头的数量
feet = 94; % 脚的数量

for chickens in range(feet/2+1):
   total_feet = chickens*2 + (heads - chickens)*4;
   if total_feet == feet
       fprintf(&#39;鸡的数量：%d\n兔子的数量：%d\n&#39;, chickens, heads-chickens);
       break;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们首先定义了头的数量（heads）和脚的数量（feet）。然后，我们使用一个for循环来枚举鸡的数量，其中鸡的数量不能超过头的数量。在循环内部，我们计算鸡和兔子的总脚数（total_feet），如果总脚数等于脚的数量，就输出鸡和兔子的数量，并跳出循环。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Go 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;bufio&amp;quot;
    &amp;quot;fmt&amp;quot;
    &amp;quot;os&amp;quot;
)

func main() 
{
    reader := bufio.NewReader(os.Stdin)
    fmt.Print(&amp;quot;请输入头数：&amp;quot;)
    text, _ := reader.ReadString(&#39;\n&#39;)
    heads, _ := strconv.Atoi(text[:len(text)-1])
    fmt.Print(&amp;quot;请输入脚数：&amp;quot;)
    text, _ = reader.ReadString(&#39;\n&#39;)
    feet, _ := strconv.Atoi(text[:len(text)-1])
    chickens, rabbits := solveChickenRabbitProblem(heads, feet)
    fmt.Printf(&amp;quot;鸡的数量：%d\n兔的数量：%d\n&amp;quot;, chickens, rabbits)
}

func solveChickenRabbitProblem(heads, feet int) (chickens, rabbits int) 
{
    for chickens &amp;lt; heads &amp;amp;&amp;amp; (chickens+rabbits)*2 &amp;lt;= feet 
    {
        chickens++
        rabbits = heads - chickens
    }
    return
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;百钱百鸡&#34;&gt;百钱百鸡&lt;/h3&gt;
&lt;p&gt;100元购买100只鸡，公鸡5元一只，母鸡3元一只，小鸡1元三只，如果花完100元，最后能买回多少只公鸡、母鸡、小鸡？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;price_chickens = 100  # 100元
total_chickens = 100  # 购买100只鸡

# 假设公鸡的数量为x，母鸡的数量为y，小鸡的数量为z
# 则有：
# x * 5 + y * 3 + z * 1.0/3 = price_chickens
# x + y + z = total_chickens

# 解这个方程组得到：
x = int((price_chickens - total_chickens) / 5)
y = int((price_chickens - total_chickens) / 3)
z = int(total_chickens - x - y)

print(&amp;quot;公鸡：&amp;quot;, x, &amp;quot;只&amp;quot;)
print(&amp;quot;母鸡：&amp;quot;, y, &amp;quot;只&amp;quot;)
print(&amp;quot;小鸡：&amp;quot;, z, &amp;quot;只&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;MATLAB 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-matlab&#34;&gt;price_chickens = 100;  % 100元
total_chickens = 100;  % 购买100只鸡

% 假设公鸡的数量为x，母鸡的数量为y，小鸡的数量为z
% 则有：
% x * 5 + y * 3 + z * 1.0/3 = price_chickens
% x + y + z = total_chickens

% 解这个方程组得到：
x = (price_chickens - total_chickens) / 5;
y = (price_chickens - total_chickens) / 3;
z = total_chickens - x - y;

disp(&amp;quot;公鸡：&amp;quot;, x, &amp;quot;只&amp;quot;);
disp(&amp;quot;母鸡：&amp;quot;, y, &amp;quot;只&amp;quot;);
disp(&amp;quot;小鸡：&amp;quot;, z, &amp;quot;只&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Zig 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-zig&#34;&gt;const std = @import(&amp;quot;std&amp;quot;);

pub fn main() void 
{
   var price_chickens = 100; // 100元
   var total_chickens = 100; // 购买100只鸡

   var x = solve(price_chickens, total_chickens, 5);
   var y = solve(price_chickens, total_chickens, 3);
   var z = total_chickens - x - y;

   std.debug.print(&amp;quot;公鸡：{}只\n&amp;quot;, .{x});
   std.debug.print(&amp;quot;母鸡：{}只\n&amp;quot;, .{y});
   std.debug.print(&amp;quot;小鸡：{}只\n&amp;quot;, .{z});
}

pub fn solve(price_chickens: i32, total_chickens: i32, cost: i32) i32 
{
   if (price_chickens == 0) 
   {
       return 0;
   }
   var chickens = total_chickens - 1;
   var cost_per_chicken = cost;
   var remaining_price = price_chickens - (chickens * cost_per_chicken);
   if (remaining_price &amp;gt;= 0) 
   {
       return chickens + solve(remaining_price, total_chickens, cost);
   } 
   else 
   {
       return 0;
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个程序首先定义了购买鸡的总金额和鸡的总数量，然后通过递归函数来计算公鸡、母鸡和小鸡的数量。最后，使用std.debug.print函数输出结果。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;约瑟夫环&#34;&gt;约瑟夫环&lt;/h3&gt;
&lt;p&gt;在某一款游戏中，曾有一个幸运儿的头衔，需要进入指定房间，完成任务即可获得。
任务规则如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如：现在进入了 六名玩家，所有人需要坐在围成一个圆的凳子上，被碰到的玩家视为淘汰。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给他们标记为 1-6 号
1碰2、3碰4、5碰6;
1碰3、5碰1、5获得。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在假设共有38名玩家进入该房间开始游戏，这些人之中，有一个叫 收藏者 的玩家，我们应该让他坐在哪个位置，才能获得该头衔。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def josephus(n, m):
    people = list(range(1, n + 1))
    index = 0
    while len(people) &amp;gt; 1:
        index = (index + m - 1) % len(people)
        del people[index]
    return people[0]

n = 38
m = 2
result = josephus(n, m)
print(&amp;quot;收藏者的位置：&amp;quot;, result)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;MATLAB 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-matlab&#34;&gt;function result = josephus(n, m)
   people = 1:n;
   index = 0;
   while ~isempty(people)
       index = (index + m - 1) % length(people);
       people(index) = [];
   end
   result = people(1);
end

n = 38;
m = 2;
[result] = josephus(n, m);
disp(&amp;quot;收藏者的位置：&amp;quot;, result);
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;C语言 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int josephus(int n, int m) 
{
   int *people = (int *) malloc(n * sizeof(int));
   if (people == NULL) 
   {
       printf(&amp;quot;Error: malloc failed\n&amp;quot;);
       exit(1);
   }
   for (int i = 0; i &amp;lt; n; i++) 
   {
       people[i] = i + 1;
   }
   int index = 0;
   while (n &amp;gt; 1) 
   {
       index = (index + m - 1) % n;
       free(people[index]);
       n--;
   }
   return people[0];
}

int main() 
{
   int n = 38;
   int m = 2;
   int result = josephus(n, m);
   printf(&amp;quot;收藏者的位置：%d\n&amp;quot;, result);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;解释圆周率&#34;&gt;解释圆周率&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import math

# 计算圆周率
pi = math.pi

# 输出圆周率
print(&amp;quot;圆周率（π）的值为：&amp;quot;, pi)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这段代码首先导入了 Python 的 &lt;code&gt;math&lt;/code&gt; 模块，然后使用该模块中的 &lt;code&gt;pi&lt;/code&gt; 函数计算圆周率。最后，我们通过 &lt;code&gt;print&lt;/code&gt; 函数输出计算得到的圆周率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C++ 演示代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() 
{
   int sum = 0; // 用于存储循环计算结果
   int i; // 循环计数器

   for (i = 1; i &amp;lt;= 1000000; i++) // 循环1000000次
   { 
       if (i % 2 == 1) 
       { // 如果i是奇数
           sum += 4.0 * (1.0 / i); // 累加4/i
       } 
       else // 如果i是偶数
       { 
           sum -= 4.0 * (1.0 / i); // 减去4/i
       }
   }

   cout &amp;lt;&amp;lt; &amp;quot;圆周率约为：&amp;quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl; // 输出结果

   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>十类常用算法</title>
      <link>https://example.com/post/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h2 id=&#34;什么是数学建模&#34;&gt;什么是数学建模&lt;/h2&gt;
&lt;p&gt;  数学建模是指对现实世界的某一特定对象，为了特定的目的，做出一些重要的简化和假设，运用适当的数学工具得到一个数学结构，用它来解释特定现象的现实性态，预测对象的未来状况，提供处理对象的优化决策和控制，设计满足某种需要的产品等。简而言之，就是利用数学知识和专业知识解决生活中的问题。&lt;/p&gt;
&lt;h3 id=&#34;数学建模竞赛中常见的十类算法&#34;&gt;数学建模竞赛中常见的十类算法：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;蒙特卡罗算法。该算法又称随机性模拟算法，是通过计算机仿真来解决问题的算法，同时可以通过模拟来检验自己模型的正确性，几乎是比赛时必用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据拟合、参数估计、插值等数据处理算法。比赛中通常会遇到大量的数据需要处理，而处理数据的关键就在于这些算法，通常使用MATLAB 作为工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线性规划、整数规划、多元规划、二次规划等规划类算法。建模竞赛大多数问题属于最优化问题，很多时候这些问题可以用数学规划算法来描述，通常使用Lindo、Lingo 软件求解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图论算法。这类算法可以分为很多种，包括最短路、网络流、二分图等算法，涉及到图论的问题可以用这些方法解决，需要认真准备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动态规划、回溯搜索、分治算法、分支定界等计算机算法。这些算法是算法设计中比较常用的方法，竞赛中很多场合会用到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最优化理论的三大非经典算法：模拟退火算法、神经网络算法、遗传算法。这些问题是用来解决一些较困难的最优化问题的，对于有些问题非常有帮助，但是算法的实现比较困难，需慎重使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网格算法和穷举法。两者都是暴力搜索最优点的算法，在很多竞赛题中有应用，当重点讨论模型本身而轻视算法的时候，可以使用这种暴力方案，最好使用一些高级语言作为编程工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一些连续数据离散化方法。很多问题都是实际来的，数据可以是连续的，而计算机只能处理离散的数据，因此将其离散化后进行差分代替微分、求和代替积分等思想是非常重要的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数值分析算法。如果在比赛中采用高级语言进行编程的话，那些数值分析中常用的算法比如方程组求解、矩阵运算、函数积分等算法就需要额外编写库函数进行调用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图象处理算法。赛题中有一类问题与图形有关，即使问题与图形无关，论文中也会需要图片来说明问题，这些图形如何展示以及如何处理就是需要解决的问题，通常使用MATLAB 进行处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下将结合历年的竞赛题，对这十类算法进行详细地说明。&lt;/p&gt;
&lt;h3 id=&#34;十类算法的详细说明&#34;&gt;十类算法的详细说明&lt;/h3&gt;
&lt;h4 id=&#34;1-蒙特卡罗算法&#34;&gt;1 蒙特卡罗算法&lt;/h4&gt;
&lt;p&gt;大多数建模赛题中都离不开计算机仿真，随机性模拟是非常常见的算法之一。&lt;/p&gt;
&lt;p&gt;举个例子就是97 年的A 题，每个零件都有自己的标定值，也都有自己的容差等级，而求解最优的组合方案将要面对着的是一个极其复杂的公式和108 种容差选取方案，根本不可能去求解析解，那如何去找到最优的方案呢？随机性模拟搜索最优方案就是其中的一种方法，在每个零件可行的区间中按照正 态分布随机的选取一个标定值和选取一个容差值作为一种方案，然后通过蒙特卡罗算法仿真出大量的方案，从中选取一个最佳的。另一个例子就是去年的彩票第二问，要求设计一种更好的方案，首先方案的优劣取决于很多复杂的因素，同样不可能刻画出一个模型进行求解，只能靠随机仿真模拟。&lt;/p&gt;
&lt;h4 id=&#34;2-数据拟合参数估计插值等算法&#34;&gt;2 数据拟合、参数估计、插值等算法&lt;/h4&gt;
&lt;p&gt;数据拟合在很多赛题中有应用，与图形处理有关的问题很多与拟合有关系，一个例子就是98 年美国赛A 题，生物组织切片的三维插值处理，94 年A 题逢山开路，山体海拔高度的插值计算，还有吵的沸沸扬扬可能会考的“非典”问题也要用到数据拟合算法，观察数据的走向进行处理。此类问题在MATLAB中有很多现成的函数可以调用，熟悉MATLAB，这些方法都能游刃有余的用好。&lt;/p&gt;
&lt;h4 id=&#34;3-规划类问题算法&#34;&gt;3 规划类问题算法&lt;/h4&gt;
&lt;p&gt;竞赛中很多问题都和数学规划有关，可以说不少的模型都可以归结为一组不等式作为约束条件、几个函数表达式作为目标函数的问题，遇到这类问题，求解就是关键了，比如98年B 题，用很多不等式完全可以把问题刻画清楚，因此列举出规划后用Lindo、Lingo 等软件来进行解决比较方便，所以还需要熟悉这两个软件。&lt;/p&gt;
&lt;h4 id=&#34;4-图论问题&#34;&gt;4 图论问题&lt;/h4&gt;
&lt;p&gt;98 年B 题、00 年B 题、95 年锁具装箱等问题体现了图论问题的重要性，这类问题算法有很多，包括：Dijkstra、Floyd、Prim、Bellman-Ford，最大流，二分匹配等问题。每一个算法都应该实现一遍，否则到比赛时再写就晚了。&lt;/p&gt;
&lt;h4 id=&#34;5-计算机算法设计中的问题&#34;&gt;5 计算机算法设计中的问题&lt;/h4&gt;
&lt;p&gt;计算机算法设计包括很多内容：动态规划、回溯搜索、分治算法、分支定界。比如92 年B 题用分枝定界法，97 年B 题是典型的动态规划问题，此外98 年B 题体现了分治算法。这方面问题和ACM 程序设计竞赛中的问题类似，推荐看一下《计算机算法设计与分析》（电子工业出版社）等与计算机算法有关的书。&lt;/p&gt;
&lt;h4 id=&#34;6-最优化理论的三大非经典算法&#34;&gt;6 最优化理论的三大非经典算法&lt;/h4&gt;
&lt;p&gt;这十几年来最优化理论有了飞速发展，模拟退火法、神经网络、遗传算法这三类算法发展很快。近几年的赛题越来越复杂，很多问题没有什么很好的模型可以借鉴，于是这三类算法很多时候可以派上用场，比如：97 年A 题的模拟退火算法，00 年B 题的神经网络分类算法，象01 年B 题这种难题也可以使用神经网络，还有美国竞赛89 年A 题也和BP 算法有关系，当时是86 年刚提出BP 算法，89 年就考了，说明赛题可能是当今前沿科技的抽象体现。03 年B 题伽马刀问题也是目前研究的课题，目前算法最佳的是遗传算法。&lt;/p&gt;
&lt;h4 id=&#34;7-网格算法和穷举算法&#34;&gt;7 网格算法和穷举算法&lt;/h4&gt;
&lt;p&gt;网格算法和穷举法一样，只是网格法是连续问题的穷举。比如要求在N 个变量情况下的最优化问题，那么对这些变量可取的空间进行采点，比如在[a, b] 区间内取M + 1 个点，就是a , a + (b -a)/M , a +2*(b - a)/M , … , b 那么这样循环就需要进行(M + 1)N 次运算，所以计算量很大。&lt;/p&gt;
&lt;p&gt;比如97 年A 题、99 年B 题都可以用网格法搜索，这种方法最好在运算速度较快的计算机中进行，还有要用高级语言来做，最好不要用MATLAB 做网格，否则会算很久的。&lt;/p&gt;
&lt;p&gt;穷举法大家都熟悉，就不说了。&lt;/p&gt;
&lt;h4 id=&#34;8-一些连续数据离散化的方法&#34;&gt;8 一些连续数据离散化的方法&lt;/h4&gt;
&lt;p&gt;大部分物理问题的编程解决，都和这种方法有一定的联系。物理问题是反映我们生活在一个连续的世界中，计算机只能处理离散的量，所以需要对连续量进行离散处理。这种方法应用很广，而且和上面的很多算法有关。事实上，网格算法、蒙特卡罗算法、模拟退火都用了这个思想。&lt;/p&gt;
&lt;h4 id=&#34;9-数值分析算法&#34;&gt;9 数值分析算法&lt;/h4&gt;
&lt;p&gt;这类算法是针对高级语言而专门设的，如果你用的是MATLAB、Mathematica，大可不必准备，因为象数值分析中有很多函数一般的数学软件是具备的。&lt;/p&gt;
&lt;h4 id=&#34;10-图象处理算法&#34;&gt;10 图象处理算法&lt;/h4&gt;
&lt;p&gt;01 年A 题中需要你会读BMP 图象、美国赛98 年A 题需要你知道三维插值计算，03 年B 题要求更高，不但需要编程计算还要进行处理，而数模论文中也有很多图片需要展示，因此图象处理就是关键。做好这类问题，重要的是把MATLAB 学好，特别是图象处理的部分。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>常用的网址</title>
      <link>https://example.com/post/%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%E9%93%BE%E6%8E%A5/</guid>
      <description>&lt;h3 id=&#34;数学建模竞赛相关&#34;&gt;数学建模竞赛相关&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.mcm.edu.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;全国大学生数学建模竞赛&lt;/a&gt;：http://www.mcm.edu.cn/&lt;br&gt;

&lt;a href=&#34;http://m2ct.org/index.jsp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‘深圳杯’数学建模挑战赛&lt;/a&gt;：http://m2ct.org/index.jsp&lt;br&gt;

&lt;a href=&#34;https://dxs.moe.gov.cn/zx/hd/sxjm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国大学生在线，数学建模区&lt;/a&gt;：https://dxs.moe.gov.cn/zx/hd/sxjm/&lt;/p&gt;
&lt;h3 id=&#34;竞赛工具类&#34;&gt;竞赛工具类&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://dxs.moe.gov.cn/zx/hd/sxjm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;北太天元&lt;/a&gt;：https://dxs.moe.gov.cn/zx/hd/sxjm/&lt;br&gt;

&lt;a href=&#34;https://www.python.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python&lt;/a&gt;：https://www.python.org/&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;各类数据&#34;&gt;各类数据&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.stats.gov.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;国家统计局&lt;/a&gt;：http://www.stats.gov.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;宏观经济和社会数据，人口、经济、环等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.casdc.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;科学数据中心&lt;/a&gt;：https://www.casdc.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;综合性科学数据共享平台，大量科研相关数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.cei.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国经济信息网&lt;/a&gt;：https://www.cei.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经济相关的各种数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;http://dc.ngac.org.cn/Home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;国家地质资料数据中心&lt;/a&gt;：http://dc.ngac.org.cn/Home&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;地质调查相关数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://cssn.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国社会科学网&lt;/a&gt;：https://cssn.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;社会科学领域的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.nesdc.org.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;国家科技资源共享服务平台&lt;/a&gt;：http://www.nesdc.org.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;生态数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://data.cma.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;国家气象科学数据中心&lt;/a&gt;：https://data.cma.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;气象数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.eol.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国教育中心&lt;/a&gt;：https://www.eol.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;教育数据，包含考试数据、学校排名等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.chinacdc.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国疾控预防控制中心&lt;/a&gt;：https://www.chinacdc.cn/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;疾病控制和预防相关数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;：https://github.com/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开源代码平台&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog.csdn.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSDN&lt;/a&gt;：https://blog.csdn.net/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;国内的一个开发者社区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.cnki.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国知网&lt;/a&gt;：https://blog.csdn.net/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文献检索&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更新中（牌烂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>多想</title>
      <link>https://example.com/post/%E5%A4%9A%E6%83%B3/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%E5%A4%9A%E6%83%B3/</guid>
      <description>&lt;iframe src=&#34;//player.bilibili.com/player.html?aid=430299701&amp;bvid=BV1XG411G7rE&amp;cid=826054226&amp;page=1&#34; scrolling=&#34;no&#34; width=&#34;640px&#34; height=&#34;490px&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt; &lt;/iframe&gt;
</description>
    </item>
    
  </channel>
</rss>
